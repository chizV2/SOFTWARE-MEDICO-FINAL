package com.example.softmedv5.modelo

/**
 * Clase que representa la informaci√≥n de contacto de un usuario
 * Permite gestionar datos personales y de contacto
 */
data class InformacionContacto(
    var telefono: String = "",
    var direccion: String = "",
    var ciudad: String = "",
    var codigoPostal: String = "",
    var fechaNacimiento: String = "",
    var genero: String = "",
    var documentoIdentidad: String = "",
    var tipoDocumento: String = "",
    var emergenciaContacto: String = "",
    var emergenciaTelefono: String = "",
    var fechaActualizacion: Long = System.currentTimeMillis()
) {
    
    /**
     * Valida que la informaci√≥n de contacto sea correcta
     * @return true si la informaci√≥n es v√°lida, false en caso contrario
     */
    fun esInformacionValida(): Boolean {
        return telefono.isNotEmpty() && 
               direccion.isNotEmpty() && 
               ciudad.isNotEmpty() &&
               documentoIdentidad.isNotEmpty()
    }
    
    /**
     * Obtiene la informaci√≥n de contacto formateada
     * @return String con la informaci√≥n formateada
     */
    fun obtenerInformacionFormateada(): String {
        return """
            üìû Tel√©fono: $telefono
            üè† Direcci√≥n: $direccion
            üèôÔ∏è Ciudad: $ciudad
            üìÆ C√≥digo Postal: $codigoPostal
            üéÇ Fecha de Nacimiento: $fechaNacimiento
            üë§ G√©nero: $genero
            üÜî $tipoDocumento: $documentoIdentidad
            üö® Contacto de Emergencia: $emergenciaContacto
            üì± Tel√©fono de Emergencia: $emergenciaTelefono
            üìÖ √öltima actualizaci√≥n: ${formatearFecha(fechaActualizacion)}
        """.trimIndent()
    }
    
    /**
     * Formatea la fecha de actualizaci√≥n
     * @param timestamp Timestamp en milisegundos
     * @return String con la fecha formateada
     */
    private fun formatearFecha(timestamp: Long): String {
        val fecha = java.util.Date(timestamp)
        val formato = java.text.SimpleDateFormat("dd/MM/yyyy HH:mm", java.util.Locale("es", "ES"))
        return formato.format(fecha)
    }
    
    /**
     * Actualiza la informaci√≥n de contacto
     * @param nuevaInformacion Nueva informaci√≥n a actualizar
     */
    fun actualizarInformacion(nuevaInformacion: InformacionContacto) {
        this.telefono = nuevaInformacion.telefono
        this.direccion = nuevaInformacion.direccion
        this.ciudad = nuevaInformacion.ciudad
        this.codigoPostal = nuevaInformacion.codigoPostal
        this.fechaNacimiento = nuevaInformacion.fechaNacimiento
        this.genero = nuevaInformacion.genero
        this.documentoIdentidad = nuevaInformacion.documentoIdentidad
        this.tipoDocumento = nuevaInformacion.tipoDocumento
        this.emergenciaContacto = nuevaInformacion.emergenciaContacto
        this.emergenciaTelefono = nuevaInformacion.emergenciaTelefono
        this.fechaActualizacion = System.currentTimeMillis()
    }
} 